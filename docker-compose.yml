services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  # development
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./backend:/app # for hot reloding
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    depends_on:
      - email-worker-dev

  email-worker-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    command: ["node", "src/workers/emailWorker.js"]
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./frontend:/app # for hot reloading
      - /app/node_modules # to prevent host node_modules from mounting
    ports:
      - "5173:5173"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend-dev

  # production
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: prod
    command:
      [
        "pm2-runtime",
        "--node-args",
        "--loader=module",
        "ecosystem.config.js",
        "--only",
        "backend-server",
      ]
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    depends_on:
      - email-worker-prod
    restart: always

  email-worker-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: prod
    command:
      [
        "pm2-runtime",
        "--node-args",
        "--loader=module",
        "ecosystem.config.js",
        "--only",
        "email-worker",
      ]
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    restart: always

volumes:
  redis-data: {}
